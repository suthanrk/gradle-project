name: POC for Path based trigger
on:
    workflow_dispatch:
    push:
    #    paths:
    #        - 'src/**'
    #        - 'gradle/**'
jobs:
    triggerpoc:
        name: 'Path based Trigger POC'
        runs-on: ubuntu-latest
        outputs:
          folderslist: ${{steps.preparelist.outputs.folderslist}}
        steps:
            # Checkout the repository to the GitHub Actions runner
              - name: 'Checkout'
                uses: actions/checkout@v2
                with:
                    fetch-depth: 0
              - name: Check for changes
                id: preparelist
                run: |
                    git diff --name-only ${{ github.event.after }} ${{ github.event.before }} > committedfiles.txt
                    filelist="./committedfiles.txt"
                    echo "File list"
                    cat committedfiles.txt
                    while IFS= read -r currentline
                    do
                      echo $(dirname ${currentline}),
                    done < "$filelist" > folderlist.txt
                    echo "Folder list"
                    cat folderlist.txt
                    sort folderlist.txt | uniq -i > uniqfolderlist.txt
                    echo "After uniq"
                    jq -Rs '[ split("\n")[] | select(length > 0) | split(",") | {iteration: .[0]} ]' uniqfolderlist.txt | tr -d '\n' > uniqfolderlist.json
                    echo "folderslist=`cat uniqfolderlist.json`" >> $GITHUB_OUTPUT
                    echo "Final"
                    echo "`cat uniqfolderlist.json`"
    build-poc:
      needs: triggerpoc
      name: 'Build POC'
      runs-on: ubuntu-latest
      strategy:
        matrix:
          folder: ${{fromJson(needs.triggerpoc.outputs.folderslist)}}
      steps:
        - name: "Print Output"
          run: |
            echo "pwd"
            pwd
            echo "list"
            ls
            currentfolder="${{matrix.folder.iteration}}"
            echo "Iteration Folder: $currentfolder"
            cd $currentfolder
            ls
